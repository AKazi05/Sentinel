version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: sentinel-db
    restart: always
    environment:
      POSTGRES_DB: sentinel
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: sentinel-backend
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sentinel
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
    container_name: sentinel-frontend
    depends_on:
      - backend
    ports:
      - "3000:80"

  agent:
    build:
      context: ./agents/python
    container_name: sentinel-agent
    depends_on:
      - backend
    environment:
      SENTINEL_SERVER_URL: ${SENTINEL_SERVER_URL}

volumes:
  postgres_data: